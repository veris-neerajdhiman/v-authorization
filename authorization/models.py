#!/usr/bin/python
# -*- coding: utf-8 -*-

"""
- authorization.models
~~~~~~~~~~~~~~

- This file holds the necessary models for authorization micro-service
"""

# future
from __future__ import unicode_literals

# 3rd party
import uuid

# Django
from django.db import models
from django.utils.translation import ugettext_lazy as _

# local


# own app


class Authorization(models.Model):
    """Authorization model

        Who can access ? what can access ?
    """

    # Attributes
    token = models.UUIDField(
            _('Resource token'),
            unique=True,
            default=uuid.uuid4,
            editable=False,
            help_text=_('Non-editable, to be generated by system itself.'),
    )
    source = models.CharField(
            _('Source (Requester)'),
            max_length=255,
            help_text=_('Who wants to access something ?'),
    )
    target = models.CharField(
            _('Target'),
            max_length=255,
            help_text=_('Whom Source wants to access ?'),
    )
    create = models.BooleanField(
            _('can create'),
            default=False,
    )
    update = models.BooleanField(
            _('can update'),
            default=False,
    )
    read = models.BooleanField(
            _('can read'),
            default=False,
    )
    delete = models.BooleanField(
            _('can delete'),
            default=False,
    )
    created_at = models.DateTimeField(
                 _('created at'),
                 auto_now_add=False,
                 db_index=True,
    )
    modified_at = models.DateTimeField(
                 _('modified at'),
                 auto_now_add=False,
                 db_index=True,
    )

    # Meta
    class Meta:
        verbose_name = _("Authorization")
        verbose_name_plural = _("Authorization")
        ordering = ["-created_at"]
        unique_together = ("source", "target",)  # ToDo: Discuss this with PR & AP

    # Functions
    def __str__(self):
        return str(self.token)
